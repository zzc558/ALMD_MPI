#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
@author: chen

Function:
    calculate bond length from coordinates.
    
Coordinates generated by data_process/read_coord_new.py on Horeka.
"""

import numpy as np
import os, pickle


BOND_INDEX = {
                'OS': [[0, 1], [0, 2]], 'CS': [[0, 3], [0, 13]],\
                'CC': [[3, 4], [3, 5], [4, 6], [5, 8], [6, 10], [6, 34],\
                       [8, 10], [13, 14], [13, 15], [14, 16], [15, 18],\
                       [16, 20], [18, 20], [20, 23], [23, 24], [23, 25],\
                       [24, 26], [25, 28], [26, 30], [28, 30]],\
                'CH': [[4, 7], [5, 9], [8, 11], [10, 12], [14, 17], [15, 19],\
                       [16, 21], [18, 22], [24, 27], [25, 29], [26, 31],\
                       [28, 32], [30, 33], [34, 35], [34, 36], [34, 37]]
                    }

BOND_LIMIT = {'OS': 2.5, 'CS': 2.75, 'CC': 2.3, 'CH': 6.0}

if __name__ == "__main__":
    data_dir = "/home/chen/Documents/blueOLED/NNsForMD/sulfone/mpi_utils/results/ml_traj/new_script/5ps_nvt_std1"
    coord_file = "coord_all.pickle"
    len_file = "s_biph_bond_len.pickle"

    atom_index_0 = 0
    atom_index_1 = 13
    time_steps = 10000
    n_atom = 38

    with open(os.path.join(data_dir, coord_file), 'rb') as fh:
        trajs = pickle.load(fh)

    # remove trajectories with length 0 (needs to figure out why they exist)
    traj_valid = []
    for t in trajs:
        if t.shape[0] > 0:
            traj_valid.append(t)

    bond_len = np.zeros((len(traj_valid), time_steps), dtype=float)
    for i in range(0, len(traj_valid)):
        atom_coord_0 = traj_valid[i][:, atom_index_0]
        atom_coord_1 = traj_valid[i][:, atom_index_1]
        bond_len[i][:len(traj_valid[i])] = np.linalg.norm(atom_coord_0 - atom_coord_1, axis=-1)

    print(bond_len.shape)

    with open(os.path.join(data_dir, len_file), 'wb') as fh:
        np.save(fh, bond_len)

    


